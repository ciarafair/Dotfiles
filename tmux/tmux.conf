#████████ ███    ███ ██    ██ ██   ██
#   ██    ████  ████ ██    ██  ██ ██
#   ██    ██ ████ ██ ██    ██   ███
#   ██    ██  ██  ██ ██    ██  ██ ██
#   ██    ██      ██  ██████  ██   ██

#   ___ ___ _  _ ___ ___    _   _
#  / __| __| \| | __| _ \  /_\ | |
# | (_ | _|| .` | _||   / / _ \| |__
#  \___|___|_|\_|___|_|_\/_/ \_\____|

set -g default-terminal screen-256color
set -g status-keys vi
set -g history-limit 10000

setw -g mode-keys vi
setw -g monitor-activity on

# Destroy unattached sessions
set-option -g destroy-unattached on

# Set default shell
set -g default-shell "/bin/zsh"

# Set colour profile
set -g default-terminal "screen-256color"

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

set -g mouse on

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on
set-option -sg escape-time 10
set-option -g focus-events on

#  ___ _   _   _  ___ ___ _  _ ___
# | _ \ | | | | |/ __|_ _| \| / __|
# |  _/ |_| |_| | (_ || || .` \__ \
# |_| |____\___/ \___|___|_|\_|___/

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'
set -g @plugin 'ayzenquwe/tmux-ping'

#  _____ _  _ ___ __  __ ___
# |_   _| || | __|  \/  | __|
#   | | | __ | _|| |\/| | _|
#   |_| |_||_|___|_|  |_|___|

backgroundVar='color7'
foregroundVar='color16'
whiteVar='color15'
blackVar='color16'
greyVar='color8'
blueVar='color6'
greenVar='color2'
pinkVar='color5'
purpleVar='color4'
redVar='color1'
yellowVar='color3'

# Statusbar style
set -g status-style fg=$whiteVar,bg=$backgroundVar

# General settings
set -g status on
set -g status-interval 1
set -g status-position bottom
set-option -g allow-passthrough on

# Widget elements
modeVar1=$redVar
modeVar2=$blueVar
modeVar3=$yellowVar

normalMode="#[bg=$modeVar1]#[fg=default]#[bold] NORMAL #[bg=$greyVar]#[fg=$modeVar1]#[nobold]\uE0B0"
prefixMode="#[bg=$modeVar2]#[fg=default]#[bold] PREFIX #[bg=$greyVar]#[fg=$modeVar2]#[nobold]\uE0B0"
copyMode="#[bg=$modeVar3]#[fg=default]#[bold]	  COPY  #[bg=$greyVar]#[fg=$modeVar3]#[nobold]\uE0B0"

modeElement="#{?pane_in_mode,$copyMode,#{?client_prefix,$prefixMode,$normalMode}}"
windowPaneElement="#[bold]#{?pane_in_mode,#[fg=$modeVar3]\uE0B2#[bg=$modeVar3],#{?client_prefix,#[fg=$modeVar2]\uE0B2#[bg=$modeVar2],#[fg=$modeVar1]\uE0B2#[bg=$modeVar1]}}#[fg=default]  #I:#P  #[nobold]"
currentWorkingDirectoryElement="#[bold]#[bg=$greyVar]#[fg=default]#[bold] #{=|-24|…;s|$HOME|~|:pane_current_path} #[bg=default]#[fg=$greyVar]#[nobold]\uE0B0"
uptimeElement="#[bold]#[fg=$blackVar,bg=default] Uptime: #(uptime | grep -o 'up [^,]*' | sed 's/up //')"
userHostElement="#[bold]#[fg=$greyVar]\uE0B2#[fg=$whiteVar,bg=$greyVar] #(whoami) "
ipv4Element="#[bold]#[fg=$blackVar,bg=default] #($HOME/.config/tmux/scripts/address.sh) "
networkPingElement="#[bold]#[fg=$blackVar,bg=default] #($HOME/.config/tmux/scripts/network_ping.sh) "
networkNameElement="#[bold]#[fg=$blackVar,bg=default] #($HOME/.config/tmux/scripts/network.sh) "

# Building Block elements
leftBorderElement="#[fg=$grayVar,bg=$backgroundVar]\uE0B1"  # 
rightBorderElement="#[fg=$grayVar,bg=$backgroundVar]\uE0B3" # 

# Statusbar formatting
leftStatus1="#[align=left]$modeElement$currentWorkingDirectoryElement"
rightStatus1="#[align=right]$networkPingElement$rightBorderElement$ipv4Element$userHostElement$windowPaneElement"

finalStatusBar=$leftStatus1$rightStatus1

set-option -g status-format[0] $finalStatusBar

# Panes
set -g pane-border-indicators arrows
set -g pane-border-lines simple

# Titles
set -g set-titles on
set -g set-titles-string "#I:#W"

# Numbering
set-option -g renumber-windows on
set -g pane-base-index 1
set -g base-index 1

# Messages
set -g message-command-style "fg=$whiteVar,bg=$blackVar"
set -g message-style "fg=$whiteVar,bg=$blackVar"

#  _  _______   _____ ___ _  _ ___ ___ _  _  ___ ___
# | |/ / __\ \ / / _ )_ _| \| |   \_ _| \| |/ __/ __|
# | ' <| _| \ V /| _ \| || .` | |) | || .` | (_ \__ \
# |_|\_\___| |_| |___/___|_|\_|___/___|_|\_|\___|___/

# First remove *all* keybindings
unbind-key -a

# Rebind prefix
unbind C-b
set-option -g prefix C-a
bind-key a send-prefix
set -s escape-time 0

# Information
bind-key ? list-keys
bind-key d display-panes
bind-key i show-messages
bind-key I show-messages -T

# Hide statusbar
bind-key t set-option status off \; set-option status-utf8 off \; set-option status-justify left \; set-option status-left-length 32 \; set-option status-right-length 150 \; refresh-client -S
bind-key T set-option status on \; set-option status-utf8 on \; set-option status-justify left \; set-option status-left-length 32 \; set-option status-right-length 150 \; refresh-client -S

# Input
bind-key $ command-prompt

# Modes
#bind-key t clock-mode
bind-key c copy-mode

# Easy reload
bind-key r source-file $HOME/.config/tmux/tmux.conf
display-message "Config reloaded."

# Window management
bind-key C new-window \; display-message "new window opened"
bind-key Q confirm-before -p "kill-window #W? (y/n)" kill-window
bind-key 0 select-window -t :0
bind-key 1 select-window -t :1
bind-key 2 select-window -t :2
bind-key 3 select-window -t :3
bind-key 4 select-window -t :4
bind-key 5 select-window -t :5
bind-key 6 select-window -t :6
bind-key 7 select-window -t :7
bind-key 8 select-window -t :8
bind-key 9 select-window -t :9

# Pane Management
bind-key q kill-pane
bind-key : split-window -v
bind-key '"' split-window -h

# Resize panes
bind-key -r '[' resize-pane -D 5
bind-key -r ']' resize-pane -U 5
bind-key -r '{' resize-pane -L 5
bind-key -r '}' resize-pane -R 5

# Pane navigation
bind-key -n C-h select-pane -L
bind-key -n C-j select-pane -D
bind-key -n C-k select-pane -U
bind-key -n C-l select-pane -R

# Shift arrow to switch windows
bind -n S-Left previous-window
bind -n S-Right next-window
bind -n S-Up next-window
bind -n S-Down previous-window

#  ___
# | _ \_  _ _ _
# |   / || | ' \
# |_|_\\_,_|_||_|

run '~/.tmux/plugins/tpm/tpm'
